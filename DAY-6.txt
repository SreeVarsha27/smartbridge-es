1.7 SEGMENT DISPLAY WITH LED BUZZER

/*
 * 7SEGDISPLAY.c
 *
 * Created: 10-06-2019 09:46:03
 * Author : T SREEVARSHA 
 */ 

#include <avr/io.h>
#define F_CPU 16000000UL
#include <util/delay.h>

int main(void)
{
    DDRC=0xFF;
	DDRB=0xFF;
	PORTC=0b01111110;
	_delay_ms(500);
	PORTC=0b00110000;
	_delay_ms(500);
	PORTC=0b01101101;
	_delay_ms(500);
	PORTC=0b01111001;
	_delay_ms(500);
	PORTC=0b00110011;
	_delay_ms(500);
	PORTC=0b01011011;
	_delay_ms(500);
	PORTC=0b01011111;
	_delay_ms(500);
	PORTC=0b01110000;
	_delay_ms(500);
	PORTC=0b01111111;
	_delay_ms(500);
	PORTC=0b01111011;
	_delay_ms(500);
    while (1) 
    {
		PORTB=0xFF;
		PORTC=0b11111110;
		_delay_ms(500);
		PORTC=0b10110000;
		_delay_ms(500);
		PORTC=0b11101101;
		_delay_ms(500);
		PORTC=0b11111001;
		_delay_ms(500);
		PORTC=0b10110011;
		_delay_ms(500);
		PORTC=0b11011011;
		_delay_ms(500);
		PORTC=0b11011111;
		_delay_ms(500);
		PORTC=0b11110000;
		_delay_ms(500);
		PORTC=0b11111111;
		_delay_ms(500);
		PORTC=0b11111011;
		_delay_ms(500);
		
    }
}






2.CODE FOR DELAY

/*
 * timer1.c
 *
 * Created: 10-06-2019 12:08:10
 * Author : T SREE VARSHA
 */ 

#include <avr/io.h>
#define LED PB0

int main( )
{
    uint8_t timeroverflowcount;
	PORTB=0xFF;
	TCNT0=0x00;
	TCCR0=(1<<CS00)|(1<<CS02);
    while (1) 
    {
		while ((TIFR & 0x01)==0);
		TCNT0=0x00;
		TIFR=0x01;
		timeroverflowcount++;
		if(timeroverflowcount>=20)
		{
			PORTB^=(0x01<<LED);
			timeroverflowcount=0;
		}
    }

}






3.CODE FOR PWM OUTPUT

/*
 * PWM.c
 *
 * Created: 10-06-2019 14:03:37
 * Author : T SREEVARSHA
 */ 
#define F_CPU 8000000UL
#include"avr/io.h"
#include<util/delay.h>
void PWM_int()
{
	TCCR0=(1<<WGM00)|(1<<WGM01)|(1<<COM01)|(1<<CS00);
	DDRB|=(1<<PB3);
}



int main(void)
{
    unsigned char duty;
	PWM_int();
    while (1) 
    {
		for(duty=0;duty<255;duty++)
		{
			OCR0=duty;
			_delay_ms(15);
		}
		for(duty=255;duty>1;duty--)
		{
			OCR0=duty;
			_delay_ms(8);
		}
    }
}

